import os
import sys
from pathlib import Path
import pytest
from httpx import AsyncClient
from app.main import app  # Ensure this import works correctly

# Fix path configuration
base_path = Path(__file__).parent.parent
sys.path.insert(0, str(base_path / "app"))

os.environ["ENVIRONMENT"] = "uat"

@pytest.fixture(scope="session")
async def async_client():
    """Async client fixture with proper cleanup"""
    async with AsyncClient(app=app, base_url="http://test") as client:
        yield client

@pytest.mark.asyncio
async def test_get_status(async_client: AsyncClient):
    response = await async_client.get("/mesh/get_status")
    assert response.status_code == 200
    data = response.json()
    assert "status" in data
    assert "application" in data["status"]  # Fixed missing closing bracket
    assert "host" in data["status"]
    assert "pid" in data["status"]

@pytest.mark.asyncio
async def test_update_map(async_client: AsyncClient, mocker):
    mock_result = {"message": "Enrichment maps updated successfully"}
    mocker.patch("app.main.auto_enrichment_obj.update_maps", return_value=mock_result)
    
    response = await async_client.get("/update-map/appid_to_1")
    assert response.status_code == 200
    assert response.json() == mock_result