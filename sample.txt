from unittest.mock import patch, MagicMock
import pytest
from my_module import MyClass, create_instance

def test_mock_init():
    with patch.object(MyClass, "__init__", return_value=None) as mock_init:
        instance = create_instance()

        # Ensure the __init__ method was called
        mock_init.assert_called_once_with("real_value")

        # Ensure instance is created but __init__ did nothing
        assert isinstance(instance, MyClass)
        assert not hasattr(instance, "value")  # Since __init__ was mocked



def test_mock_init_with_magics():
    with patch("my_module.MyClass", autospec=True) as mock_class:
        mock_class.return_value = MagicMock()
        instance = create_instance()

        # Ensure class was called
        mock_class.assert_called_once_with("real_value")