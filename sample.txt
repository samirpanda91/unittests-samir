from datetime import datetime

def get_incident_filter_conditions(self, query, value, column, field):
    if isinstance(value, list):
        if field in ("incidentStartTime", "incidentEndTime") and len(value) == 2:
            try:
                start_time = datetime.fromisoformat(value[0])
                end_time = datetime.fromisoformat(value[1])
                query = query.filter(column.between(start_time, end_time))
            except ValueError:
                raise ValueError(
                    f"Invalid date format in list for {field}: Expected format: YYYY-MM-DD HH:MM:SS"
                )
        else:
            query = query.filter(column.in_(value))
    elif field in ("incidentStartTime", "incidentEndTime") and isinstance(value, str):
        try:
            incident_time = datetime.fromisoformat(value)
            if field == "incidentStartTime":
                query = query.filter(column > incident_time)
            else:
                query = query.filter(column < incident_time)
        except ValueError:
            raise ValueError(
                f"Invalid date format for {field}: Expected format: YYYY-MM-DD HH:MM:SS"
            )
    elif isinstance(value, str) and value.strip().lower() == "not null":
        query = query.filter(column.is_not(None))
    elif isinstance(value, str) and value.strip().lower() == "null":
        query = query.filter(column.is_(None))
    else:
        query = query.filter(column == value)
    return query