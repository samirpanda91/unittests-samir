import pytest
from unittest.mock import patch, MagicMock
from pathlib import Path
from Kafka_sync.kafka_sync import Kafka_sync  # Adjust import as per your project structure

@pytest.fixture
def mock_ssl_files(tmp_path):
    """Create fake SSL certificate files to prevent Kafka SSL errors."""
    ca_cert = tmp_path / "fake_cert.pem"
    key_cert = tmp_path / "fake_key.pem"

    ca_cert.write_text("FAKE CA CERT DATA")
    key_cert.write_text("FAKE KEY CERT DATA")

    return str(ca_cert), str(key_cert)

@pytest.fixture
def mock_kafka_config(mock_ssl_files):
    """Mock Kafka configuration with SSL paths."""
    ca_path, key_path = mock_ssl_files

    return {
        "src": {
            "kafka_environment": "uat-consumer",
            "topics": ["test_topic"],
            "consumer_group": "test-group",
            "filters": {"key1": "value1"},
            "ssl.ca.location": ca_path  # ✅ Using mocked SSL path
        },
        "dest": {
            "kafka_environment": "sit-producer",
            "topics": ["test_topic"],
            "ssl.ca.location": ca_path  # ✅ Using mocked SSL path
        }
    }

@patch("Kafka_sync.kafka_sync.Aiops_config.get_instance")
@patch("Kafka_sync.kafka_sync.Kafka_Client")
@patch("Kafka_sync.kafka_sync.Kafka_Writer")
def test_kafka_sync(mock_kafka_writer, mock_kafka_client, mock_get_instance, mock_kafka_config):
    """Test Kafka_sync initialization with mocked SSL config."""

    # ✅ Mock Config with SSL Paths
    mock_get_instance.return_value = mock_kafka_config

    # ✅ Mock Kafka Client
    mock_kafka_client.return_value = MagicMock()

    # ✅ Mock Kafka Writer
    mock_kafka_writer.return_value = MagicMock()

    # ✅ Print the mocked config for debugging
    print("Mocked Config:", mock_kafka_config)

    # ✅ Initialize Kafka_sync
    kafka_sync = Kafka_sync("tests/test_config.toml")

    # ✅ Ensure Kafka_Writer is called
    mock_kafka_writer.assert_called()

    # ✅ Verify SSL paths are correctly passed
    assert kafka_sync.config["src"]["ssl.ca.location"] == mock_kafka_config["src"]["ssl.ca.location"]
    assert kafka_sync.config["dest"]["ssl.ca.location"] == mock_kafka_config["dest"]["ssl.ca.location"]

    print("Test Passed! SSL paths are correctly mocked.")