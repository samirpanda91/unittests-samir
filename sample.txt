import React, { useState } from "react";
import {
  Container, TextField, Button, MenuItem, Select, FormControl, InputLabel,
  Typography, Box, Paper, Alert
} from "@mui/material";
import Grid2 from "@mui/material/Unstable_Grid2";

const App = () => {
  const [alertThreshold, setAlertThreshold] = useState("10");
  const [nRecords, setNRecords] = useState("20");
  const [incidents, setIncidents] = useState([]);
  const [selectedIncident, setSelectedIncident] = useState("");
  const [isDropdownPopulated, setIsDropdownPopulated] = useState(false);

  const fetchIncidents = async () => {
    try {
      const response = await api.get("/ais/v1/incidents", {
        params: { alert_threshold: alertThreshold, n_records: nRecords }
      });
      const fetchedIncidents = Array.isArray(response.data) ? response.data : [];
      setIncidents(fetchedIncidents);
      setIsDropdownPopulated(true);
    } catch (error) {
      console.error("Error fetching incidents:", error);
      setIncidents([]);
      setIsDropdownPopulated(false);
    }
  };

  const handleIncidentSelect = (incidentId) => {
    setSelectedIncident(incidentId);
  };

  return (
    <Container maxWidth={false} sx={{ mt: 5, height: "100vh", width: "100%", p: 0 }}>
      <Typography variant="h4" textAlign="center" fontWeight="bold" color="primary" gutterBottom>
        Advanced Incident Summarization
      </Typography>

      <Box sx={{ display: "flex", height: "80vh", mt: 2, gap: 2 }}>
        <Paper elevation={3} sx={{ p: 3, flex: 1, display: "flex", flexDirection: "column", overflowY: "auto", width: "48%" }}>
          {/* Input Fields in One Line */}
          <Box sx={{ display: "flex", gap: 2, mb: 2 }}>
            <TextField
              label="alert_threshold"
              fullWidth
              variant="outlined"
              value={alertThreshold}
              onChange={(e) => setAlertThreshold(e.target.value)}
              sx={{ backgroundColor: "white", borderRadius: 1, "& .MuiInputBase-root": { height: 40 } }}
            />
            <TextField
              label="n_records"
              fullWidth
              variant="outlined"
              value={nRecords}
              onChange={(e) => setNRecords(e.target.value)}
              sx={{ backgroundColor: "white", borderRadius: 1, "& .MuiInputBase-root": { height: 40 } }}
            />
          </Box>

          {/* Get Incidents Button in the Middle */}
          <Button
            variant="contained"
            color="secondary"
            onClick={fetchIncidents}
            sx={{ fontWeight: "bold", width: "100%", height: 40, mb: 2 }}
          >
            Get Incidents
          </Button>

          {/* Dropdown for Incidents */}
          <FormControl fullWidth sx={{ mb: 2 }}>
            <InputLabel shrink sx={{ backgroundColor: "white", px: 1 }}>
              DD Incidents
            </InputLabel>
            <Select
              value={selectedIncident || ""}
              onChange={(e) => handleIncidentSelect(e.target.value)}
              sx={{ backgroundColor: "white", borderRadius: 1, "& .MuiInputBase-root": { height: 40 } }}
              MenuProps={{ PaperProps: { sx: { maxHeight: 200, marginTop: 1 } } }}
            >
              {isDropdownPopulated && (
                <MenuItem disabled sx={{ fontStyle: "italic" }}>
                  Dropdown is populated. Please select an incident.
                </MenuItem>
              )}
              {Array.isArray(incidents) && incidents.map((incident) => (
                <MenuItem key={incident.id} value={incident.id ? incident.id.toString() : ""}>
                  {`Incident ${incident.id}`}
                </MenuItem>
              ))}
            </Select>
          </FormControl>
        </Paper>

        {/* Right Side: Summarize Button and Summarized Details */}
        <Paper elevation={3} sx={{ p: 3, flex: 1, display: "flex", flexDirection: "column", overflowY: "auto", width: "48%" }}>
          <Button
            variant="contained"
            color="success"
            onClick={() => {}}
            sx={{ fontWeight: "bold", width: "100%", height: 40, mb: 2 }}
          >
            Summarize
          </Button>
          <Typography variant="h6" fontWeight="bold" color="primary" gutterBottom>
            Summarized Details
          </Typography>
          <Box sx={{ flex: 1, overflowY: "auto", pr: 2 }}>
            <Typography sx={{ mt: 1, fontStyle: "italic" }}>No summarized details available</Typography>
          </Box>
        </Paper>
      </Box>
    </Container>
  );
};

export default App;